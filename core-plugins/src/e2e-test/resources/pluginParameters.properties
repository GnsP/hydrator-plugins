projectId=cdf-athena
dataset=test_automation
csvFormat=csv

## GCS-PLUGIN-PROPERTIES
gcsSourceBucket1=dummy
gcsSourceBucket2=dummy
gcsTargetBucket=dummy

firstNameCsvFile=testdata/first_name.csv
lastNameCsvFile=testdata/last_name.csv
firstNameOutputSchema=[{"key":"id","value":"int"},{"key":"first_name","value":"string"}]
lastNameOutputSchema=[{"key":"id","value":"int"},{"key":"last_name","value":"string"}]
errorCollectorOutputSchema=[{"key":"id","value":"int"},{"key":"first_name","value":"string"},\
  {"key":"msg","value":"string"},{"key":"code","value":"int"},{"key":"node","value":"string"}]
joinerOutput=testdata/joiner_output.csv
errorCollectorOutput=testdata/error_collector_output.csv
expectedJoinerOutputPartitions=1
# Set the errorcollector partition to 0 since the plugin doesn't specify the output partition.
# By setting it to 0, all partitions will be combined and sorted during the verification process.
expectedErrorCollectorOutputPartitions=0
javascriptTransformScript=function transform(input, emitter, context) { \
                    if (input.id < 10) { \
                        emitter.emitError({ \
                            'errorCode': 1, \
                            'errorMsg': 'blacklisted id', \
                            'invalidRecord': input \
                        }); \
                        return \
                    } \
                }

## FILE-PLUGIN-PROPERTIES-START
incorrectFilePath=invalidPath
csvFile=testdata/file/CSV_TEST.csv
csvFileSchema=[{"key":"EmployeeDepartment","value":"string"},{"key":"Employeename","value":"string"},\
  {"key":"Salary","value":"int"},{"key":"workhours","value":"int"}]
csvFileOutputSchema={ "type": "record", "name": "text", "fields": [ \
  { "name": "EmployeeDepartment", "type": "string" }, { "name": "Employeename", "type": "string" }, \
  { "name": "Salary", "type": "int" }, { "name": "workhours", "type": "int" } ] }
csvAllDataTypeFile=testdata/file/CSV_DATATYPE_TEST_1.csv
csvAllDataTypeFileSchema=[{"key":"id","value":"int"},{"key":"name","value":"string"},\
  {"key":"yearofbirth","value":"int"},{"key":"isdeleted","value":"boolean"},{"key":"email","value":"string"},\
  {"key":"createddate","value":"string"},{"key":"revenue","value":"string"},{"key":"points","value":"string"},\
  {"key":"longdatatype","value":"string"},{"key":"doubledatatype","value":"double"},\
  {"key":"date","value":"string"},{"key":"null","value":"string"},{"key":"BytesData","value":"string"}]
tsvFile=testdata/file/TSV_TEST.tsv
tsvFileSchema=[{"key":"testscenarioid","value":"string"},{"key":"testdescription","value":"string"},\
  {"key":"testconditionid","value":"string"},{"key":"testtype","value":"string"}]
blobFile=testdata/file/BLOB_TEST.zip
blobFileSchema=[{"key":"body","value":"bytes"}]
delimitedFile=testdata/file/DELIMITED_TEST.txt
delimiter=@
incorrectDelimiter=#
delimitedFileSchema=[{"key":"id","value":"int"},{"key":"name","value":"string"},\
  {"key":"yearofbirth","value":"int"},{"key":"datatype","value":"long"},{"key":"tablename","value":"string"}]
textFile=testdata/file/TEXT_TEST.txt
textFileSchema=[{"key":"offset","value":"long"},{"key":"body","value":"string"}]
outputFieldTestFile=testdata/file/OUTPUTFIELD_TEST.csv
outputPathField=outputfield
invalidOutputPathField=invalid
outputFieldTestFileSchema=[{"key":"id","value":"int"},{"key":"firstname","value":"string"},\
  {"key":"lastname","value":"string"},{"key":"photo","value":"string"},{"key":"outputfield","value":"string"}]
overrideSchema=[{"key":"id","value":"float"},{"key":"firstname","value":"string"},\
  {"key":"lastname","value":"string"},{"key":"photo","value":"string"},{"key":"outputfield","value":"string"}]
overrideField=id
invalidOverrideField=invalid
overrideDataType=float
readRecursivePath=testdata/file/RECURSIVE_TEST
readRecursivePathSchema=[{"key":"id","value":"int"},{"key":"name","value":"string"},\
  {"key":"yearofbirth","value":"int"},{"key":"tablename","value":"string"},{"key":"offset","value":"string"}]
fileMaxSplitSize=120
regexPathFilter=.+TEST.csv
incorrectRegexPathFilter=/tZY
filePluginOutputFolder=file-plugin-output
skipHeaderTrue=true
fileSinkPathSuffix=yyyy-MM-dd-HH-mm-ss
enableQuotedValuesTrue=true
## FILE-PLUGIN-PROPERTIES-END

## NORMALIZE-PLUGIN-PROPERTIES-START
normalizeMappingField=test
normalizeAttributeType=AttributeType
normalizeGcsValidFieldsMapping=[{"key":"CustomerId","value":"ID"},{"key":"Purchase_Date","value":"Date"}]
normalizeGcsInvalidFieldsMapping=[{"key":"15","value":"test"}]
normalizeGcsValidOutputSchema=[{"key":"ID","value":"string"},{"key":"AttributeType","value":"string"},\
  {"key":"AttributeValue","value":"string"},{"key":"Date","value":"string"}]
normalizeGcsInvalidOutputSchema=[{"key":"ID","value":"string"}]
normalizeFieldsToBeNormalizedGCS=[{"key":"Item_ID#AttributeType","value":"AttributeValue"},\
  {"key":"Item_Cost#AttributeType","value":"AttributeValue"}]
normalizeInvalidFieldsToBeNormalizedGCS=[{"key":"normalizeTest#AttributeType","value":"AttributeValue"}]
normalizeBQValidOutputSchema=[{"key":"ID","value":"string"},{"key":"AttributeType","value":"string"},\
  {"key":"AttributeValue","value":"string"},{"key":"Date","value":"string"}]
normalizeFileValidFieldsMapping=[{"key":"id","value":"ID"},{"key":"createddate","value":"Date"}]
normalizeFieldsToBeNormalizedFile=[{"key":"revenue#AttributeType","value":"AttributeValue"},\
  {"key":"points#AttributeType","value":"AttributeValue"},{"key":"email#AttributeType","value":"AttributeValue"}]
normalizeCsvFile=testdata/file/CSV_Normalize_TEST.csv
normalizeCsvOutputFile=testdata/expected_outputs/CSV_Normalize_TEST_Output.csv
normalizeCsvFileSchema=[{"key":"CustomerId","value":"string"},{"key":"Item_ID","value":"string"},\
  {"key":"Item_Cost","value":"double"},{"key":"Purchase_Date","value":"string"}]
normalizeCsvFileOutputSchema={ "type": "record", "name": "text", "fields": [ \
  { "name": "CustomerId", "type": "string" }, { "name": "Item_ID", "type": "string" }, \
  { "name": "Item_Cost", "type": "double" }, { "name": "Purchase_Date", "type": "string" } ] }
normalizeBQValidDatatypeOutputSchema=[{"key":"ID","value":"int"},{"key":"AttributeType","value":"string"},\
  {"key":"AttributeValue","value":"string"},{"key":"Date","value":"string"}]
normalizeCsvAllDataTypeFile=testdata/file/CSV_Normalize_TEST_1.csv
normalizeCsvAllDataTypeOutputFile=testdata/expected_outputs/CSV_NormalizeOutput.csv
normalizeCsvAllDataTypeFileSchema=[{"key":"id","value":"int"},{"key":"name","value":"string"},\
  {"key":"yearofbirth","value":"int"},{"key":"isdeleted","value":"boolean"},{"key":"email","value":"string"},\
  {"key":"createddate","value":"string"},{"key":"revenue","value":"string"},{"key":"points","value":"string"},\
  {"key":"longdatatype","value":"string"},{"key":"doubledatatype","value":"double"},\
  {"key":"date","value":"string"},{"key":"null","value":"string"},{"key":"BytesData","value":"string"}]
writeHeaderTrue=true
## NORMALIZE-PLUGIN-PROPERTIES-END

## DISTINCT-PLUGIN-PROPERTIES-START
distinctInvalidFields=$^&*
distinctInvalidPartitions=&*^*
distinctInValidFieldNames=$^&*#%
distinctValidSingleFieldName=isdeleted
distinctFileCsvFile=testdata/file/CSV_DISTINCT_TEST.csv
distinctFileCsvOutputFile=testdata/file/expected_outputs/CSV_DISTINCT_TEST_OUTPUT.csv
distinctCsvFileSchema=[{"key":"user","value":"string"},{"key":"item","value":"string"},\
  {"key":"action","value":"string"},{"key":"timestamp","value":"string"}]
distinctValidMultipleFieldsNames=user, item, action
distinctCsvFileOutputSchema={ "type": "record", "name": "text", "fields": [ \
  { "name": "user", "type": "string" }, { "name": "item", "type": "string" }, \
  { "name": "action", "type": "string" }, { "name": "timestamp", "type": "string" } ] }
distinctOutputSchema=[{"key":"user","value":"string"},{"key":"item","value":"string"},\
  {"key":"action","value":"string"}]
distinctValidPartitions=1
distinctOutputFileSchema=[{"key":"isdeleted","value":"boolean"}]
distinctCsvAllDataTypeFile=testdata/file/CSV_DATATYPE_TEST_1.csv
distinctCsvAllDataTypeOutputFile=testdata/file/expected_outputs/CSV_DATATYPE_TEST_1_OUTPUT.csv
distinctCsvAllDataTypeFileSchema=[{"key":"id","value":"int"},{"key":"name","value":"string"},\
  {"key":"yearofbirth","value":"int"},{"key":"isdeleted","value":"boolean"},{"key":"email","value":"string"},\
  {"key":"createddate","value":"string"},{"key":"revenue","value":"string"},{"key":"points","value":"string"},\
  {"key":"longdatatype","value":"string"},{"key":"doubledatatype","value":"double"},\
  {"key":"date","value":"string"},{"key":"null","value":"string"},{"key":"BytesData","value":"string"}]
distinctDatatypeOutputFile=testdata/expected_outputs/CSV_DISTINCT_TEST1_Output.csv
distinctCsvOutputFile=testdata/expected_outputs/CSV_DISTINCT_TEST2_Output.csv
distinctMacroOutputFile=testdata/expected_outputs/CSV_DISTINCT_TEST3_Output.csv
## DISTINCT-PLUGIN-PROPERTIES-END
